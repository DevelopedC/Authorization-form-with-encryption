<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>